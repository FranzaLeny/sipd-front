import { jsPDF } from 'jspdf'
import autoTable, { CellDef } from 'jspdf-autotable'

var generateData = function (amount: number) {
  var result: {
    id: string
    coin: string
    game_group: string
    game_name: string
    game_version: string
    machine: string
    vlt: string
  }[] = []
  var data = {
    id: '0',
    coin: '100',
    game_group:
      'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Quaerat, vero? Temporibus blanditiis officiis enim earum eaque eveniet, ex nam, doloribus praesentium libero totam optio repellendus omnis sapiente voluptatem veritatis. Exercitationem.',
    game_name: 'XPTO2XXXXXXXXXXXXXX',
    game_version: '25',
    machine: '20485861',
    vlt: '0',
  }
  for (var i = 0; i < amount; i += 1) {
    data.id = (i + 1).toString()
    result.push(Object.assign({}, data))
  }
  return result
}
function createHeaders(keys: string[]) {
  var result: CellDef[] = []
  for (var i = 0; i < keys.length; i += 1) {
    result.push({
      content: keys[i],
    })
  }
  return result
}

var headers = createHeaders([
  'id',
  'coin',
  'game_group',
  'game_name',
  'game_version',
  'machine',
  'vlt',
])

let pageSizes = {
  legal: 'legal',
  letter: 'letter',
  a4: 'a4',
  f4: [215, 330],

  //     a0 - a10
  // b0 - b10
  // c0 - c10
  // dl
  // letter
  // government-letter
  // legal
  // junior-legal
  // ledger
  // tabloid
  // credit-card
}

// Define the PdfGenerator component
const PdfGenerator = ({
  mb = 15,
  ml = 20,
  mr = 10,
  mt = 15,
  fontSize = 10,
  size = 'f4',
  orientation = 'landscape',
}: {
  mt?: number
  mr?: number
  mb?: number
  ml?: number
  fontSize?: number
  size?: keyof typeof pageSizes
  orientation?: 'landscape' | 'portrait'
}) => {
  const doc = new jsPDF({
    format: pageSizes[size],
    orientation,
    unit: 'mm',
    precision: 2,
    putOnlyUsedFonts: true,
  })
  doc.setFontSize(fontSize)
  const { height, width } = doc.internal.pageSize
  console.log({ height, width })
  autoTable(doc, { html: '.table', startY: mt })

  autoTable(doc, {
    // head: [headers],
    body: generateData(100),
    columns: [
      { dataKey: 'id' },
      { dataKey: 'coin' },
      { dataKey: 'game_group' },
      { dataKey: 'game_name' },
      { dataKey: 'game_version' },
      { dataKey: 'machine' },
      { dataKey: 'vlt' },
    ],
    // columns: [
    //   { dataKey: 'id', header: 'ID' },
    //   { dataKey: 'coin', header: 'Coin' },
    //   { dataKey: 'game_group', header: 'Game Group' },
    //   { dataKey: 'game_name', header: 'Game Name' },
    //   { dataKey: 'game_version', header: 'Game Version' },
    //   { dataKey: 'machine', header: 'Machine' },
    //   { dataKey: 'vlt', header: 'VLT' },
    // ],
    tableWidth: 'auto',
    margin: { top: mt, right: mr, bottom: mb, left: ml },
  })
  var finalY = doc.lastAutoTable.finalY || mt
  console.log({ finalY })

  const a = doc.text(
    `Lorem ipsum, dolor sit amet consectetur adipisicing elit. Quaerat, vero? Temporibus blanditiis officiis enim earum eaque eveniet, ex nam, doloribus praesentium libero totam optio repellendus omnis sapiente voluptatem veritatis. Exercitationem.`,
    ml,
    finalY,
    { maxWidth: width - ml - mr }
  )
  const totalPages = doc.getNumberOfPages()
  for (let i = 1; i <= totalPages; i++) {
    doc.line(10, 283, 200, 283)
    doc.setPage(i)
    // doc.setFont('Newsreader')
    doc.text(`Page ${i} of ${totalPages}`, width - 5, height - 5, { align: 'right' })
  }

  const pdfDataUri = doc.output('datauristring')

  const newTab = window.open()
  newTab?.document.write(`<iframe width='100%' height='100%' src='${pdfDataUri}'></iframe>`)
}

export default PdfGenerator
